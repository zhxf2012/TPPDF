os: osx
osx_image: xcode11.6
language: objective-c
cache:
- bundler

env:
  global:
  - DESTINATION="OS=13.4,name=iPhone 11 Pro"
  - WORKSPACE="Example.xcworkspace"
  - PROJECT="Example.xcodeproj"
  - EXAMPLE_SCHEME="Example"

  - secure: y71ScxtfYr3/DI0XKjGz8Bmia33QF9vO5euPJJbQ6kD5ADhEFkici/YZWxDkYtEZocKaUHIR4KYrKya2kTwJC630s2wLg974gERcUATZkWxeJdKgpfZ2aZtqYNPPDxozMTFtiT4kaw5HiD0usJUgnWKqf/XsTW+3BpTJA58xqXChcXulibs9FJvPz6ZVxW+dNW3F5xtC3GCOWk3Rofrw8GJXdCfie/CaJUvxaQVm9hOwKn0Akpe6rvFKlMtfYOLL9yclaMAM+Um7uFVZwhCPHtAzXvpOhA2U/n7eXy/fNpoXxi9zf+epD1iiFmxJQfc1ZO6jkUJEksLXdO3pEMnoe205Bm70QMO6l9gyuq6Z2cUcCBrd2wDzfLYBoOqapgachpTQifotXX6rapm5pCDhg0pMCRihH5moFnsE7jqz2Lo4n68cvSa9+Irr97HmvH+GdF++VIVGK4/GJOErwGUx0Nh32BIeV3p4D+MNm918mAEO7a66a1RiTKNAr1xnrAtCl0k4XeZPCp0uQQ0TEVOxi/vecIS3k6mNMJw5W9tE0F7fun8kHdv6EKrzKIBkyDxMsh2Z5zVqE3wRcCuD+7FgrcmYDUXyk+t1o2cMNs7iZkKFQAG69+qXviTXnaD9Mq0LGP1sx+OQpQKzde9CAC+tgj+1fqD41jqr6zHJqaEOxvs=

stages:
  - Tests
  - Examples
  - Documentation

jobs:
  include:
  - stage: Tests
    name: "Unit Tests"
    language: objective-c
    env:
    - TEST_FRAMEWORK_SCHEME="TPPDF-Package"
    - PROJECT="TPPDF.xcodeproj"
    script:
    - set -o pipefail
    - swift package resolve
    - set -o pipefail
    - xcodebuild -project ${PROJECT}
                 -scheme ${TEST_FRAMEWORK_SCHEME}
                 -clonedSourcePackagesDirPath .
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 -sdk iphonesimulator
                 -destination "${DESTINATION}"
                 -configuration Debug
                 ONLY_ACTIVE_ARCH=YES
                 test | xcpretty

    after_success:
    - bundle exec slather coverage -t --build-directory ${TRAVIS_BUILD_DIR}/derived_data
    - bash <(curl -s https://codecov.io/bash) -f cobertura.xml -X coveragepy -X gco

  - stage: Examples
    name: "Example iOS - Cocoapods"
    language: objective-c
    cache:
      - bundler
      - cocoapods
    env:
    - ROOT_FOLDER="Example iOS-Cocoapods"
    podfile: "${ROOT_FOLDER}/Podfile"
    before_script:
    - bundle exec pod install --project-directory="${ROOT_FOLDER}"
    - cd "${ROOT_FOLDER}"
    script:
    - set -o pipefail  
    - xcodebuild -workspace "$WORKSPACE"
                 -scheme "$EXAMPLE_SCHEME"
                 -sdk iphonesimulator
                 -destination "$DESTINATION"
                 -configuration Debug
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 ONLY_ACTIVE_ARCH=YES
                 build | xcpretty
    - cd ../
    - bundle exec pod lib lint --allow-warnings

  - stage: Examples
    name: "Example iOS - Carthage"
    language: objective-c
    if: type != pull_request
    env:
    - ROOT_FOLDER="Example iOS-Carthage"
    before_script:
    - cd "${ROOT_FOLDER}"
    - echo 'github "techprimate/TPPDF" "'$(git rev-parse HEAD)'"' > Cartfile
    - carthage update --platform ios --cache-builds
    script:
    - set -o pipefail
    - xcodebuild -project "$PROJECT"
                 -scheme "$EXAMPLE_SCHEME"
                 -sdk iphonesimulator
                 -destination "$DESTINATION"
                 -configuration Debug
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 ONLY_ACTIVE_ARCH=YES
                 build | xcpretty

  - stage: Examples
    name: "Example iOS - Swift PM"
    language: objective-c
    env:
    - ROOT_FOLDER="Example iOS-SwiftPM"
    script:
    - cd "${ROOT_FOLDER}"
    - xcodebuild -resolvePackageDependencies
                 -project ${PROJECT}
                 -scheme ${EXAMPLE_SCHEME}
                 -clonedSourcePackagesDirPath .
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 -configuration Debug | xcpretty
    - set -o pipefail  
    - xcodebuild -project ${PROJECT}
                 -scheme ${EXAMPLE_SCHEME}
                 -clonedSourcePackagesDirPath .
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 -sdk iphonesimulator
                 -destination "${DESTINATION}"
                 -configuration Debug
                 ONLY_ACTIVE_ARCH=YES
                 build | xcpretty

  - stage: Examples
    name: "Example macOS"
    language: objective-c
    env:
    - ROOT_FOLDER="Example macOS"
    script:
    - cd "${ROOT_FOLDER}"
    - xcodebuild -resolvePackageDependencies
                 -project ${PROJECT}
                 -scheme ${EXAMPLE_SCHEME}
                 -clonedSourcePackagesDirPath .
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 -configuration Debug | xcpretty
    - set -o pipefail  
    - xcodebuild -project ${PROJECT}
                 -scheme ${EXAMPLE_SCHEME}
                 -clonedSourcePackagesDirPath .
                 -derivedDataPath ${TRAVIS_BUILD_DIR}/derived_data
                 -sdk macosx10.15
                 -configuration Debug
                 ONLY_ACTIVE_ARCH=YES
                 build | xcpretty

  - stage: Documentation
    name: Generate Documentation
    language: objective-c
    if: branch = master AND type != pull_request
    script:
    - git remote update
    - git fetch origin gh-pages:gh-pages
    - git checkout gh-pages
    - git merge master -X theirs --allow-unrelated-histories
    - bundle exec jazzy
    - git add docs
    - git config user.name  "Travis"
    - git config user.email "jazzy@travis-ci.com"
    - git commit -m "Updated docs for $TRAVIS_TAG"
    - git remote add secure-origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
    - git push secure-origin gh-pages
